{
  "version": 3,
  "sources": ["../../leaflet-textpath/leaflet.textpath.js"],
  "sourcesContent": ["/*\n * Leaflet.TextPath - Shows text along a polyline\n * Inspired by Tom Mac Wright article :\n * http://mapbox.com/osmdev/2012/11/20/getting-serious-about-svg/\n */\n\n(function () {\n\nvar __onAdd = L.Polyline.prototype.onAdd,\n    __onRemove = L.Polyline.prototype.onRemove,\n    __updatePath = L.Polyline.prototype._updatePath,\n    __bringToFront = L.Polyline.prototype.bringToFront;\n\n\nvar PolylineTextPath = {\n\n    onAdd: function (map) {\n        __onAdd.call(this, map);\n        this._textRedraw();\n    },\n\n    onRemove: function (map) {\n        map = map || this._map;\n        if (map && this._textNode && map._renderer._container)\n            map._renderer._container.removeChild(this._textNode);\n        __onRemove.call(this, map);\n    },\n\n    bringToFront: function () {\n        __bringToFront.call(this);\n        this._textRedraw();\n    },\n\n    _updatePath: function () {\n        __updatePath.call(this);\n        this._textRedraw();\n    },\n\n    _textRedraw: function () {\n        var text = this._text,\n            options = this._textOptions;\n        if (text) {\n            this.setText(null).setText(text, options);\n        }\n    },\n\n    setText: function (text, options) {\n        this._text = text;\n        this._textOptions = options;\n\n        /* If not in SVG mode or Polyline not added to map yet return */\n        /* setText will be called by onAdd, using value stored in this._text */\n        if (!L.Browser.svg || typeof this._map === 'undefined') {\n          return this;\n        }\n\n        var defaults = {\n            repeat: false,\n            fillColor: 'black',\n            attributes: {},\n            below: false,\n        };\n        options = L.Util.extend(defaults, options);\n\n        /* If empty text, hide */\n        if (!text) {\n            if (this._textNode && this._textNode.parentNode) {\n                this._map._renderer._container.removeChild(this._textNode);\n                \n                /* delete the node, so it will not be removed a 2nd time if the layer is later removed from the map */\n                delete this._textNode;\n            }\n            return this;\n        }\n\n        text = text.replace(/ /g, '\\u00A0');  // Non breakable spaces\n        var id = 'pathdef-' + L.Util.stamp(this);\n        var svg = this._map._renderer._container;\n        this._path.setAttribute('id', id);\n\n        if (options.repeat) {\n            /* Compute single pattern length */\n            var pattern = L.SVG.create('text');\n            for (var attr in options.attributes)\n                pattern.setAttribute(attr, options.attributes[attr]);\n            pattern.appendChild(document.createTextNode(text));\n            svg.appendChild(pattern);\n            var alength = pattern.getComputedTextLength();\n            svg.removeChild(pattern);\n\n            /* Create string as long as path */\n            text = new Array(Math.ceil(isNaN(this._path.getTotalLength() / alength) ? 0 : this._path.getTotalLength() / alength)).join(text);\n        }\n\n        /* Put it along the path using textPath */\n        var textNode = L.SVG.create('text'),\n            textPath = L.SVG.create('textPath');\n\n        var dy = options.offset || this._path.getAttribute('stroke-width');\n\n        textPath.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\", '#'+id);\n        textNode.setAttribute('dy', dy);\n        for (var attr in options.attributes)\n            textNode.setAttribute(attr, options.attributes[attr]);\n        textPath.appendChild(document.createTextNode(text));\n        textNode.appendChild(textPath);\n        this._textNode = textNode;\n\n        if (options.below) {\n            svg.insertBefore(textNode, svg.firstChild);\n        }\n        else {\n            svg.appendChild(textNode);\n        }\n\n        /* Center text according to the path's bounding box */\n        if (options.center) {\n            var textLength = textNode.getComputedTextLength();\n            var pathLength = this._path.getTotalLength();\n            /* Set the position for the left side of the textNode */\n            textNode.setAttribute('dx', ((pathLength / 2) - (textLength / 2)));\n        }\n\n        /* Change label rotation (if required) */\n        if (options.orientation) {\n            var rotateAngle = 0;\n            switch (options.orientation) {\n                case 'flip':\n                    rotateAngle = 180;\n                    break;\n                case 'perpendicular':\n                    rotateAngle = 90;\n                    break;\n                default:\n                    rotateAngle = options.orientation;\n            }\n\n            var rotatecenterX = (textNode.getBBox().x + textNode.getBBox().width / 2);\n            var rotatecenterY = (textNode.getBBox().y + textNode.getBBox().height / 2);\n            textNode.setAttribute('transform','rotate(' + rotateAngle + ' '  + rotatecenterX + ' ' + rotatecenterY + ')');\n        }\n\n        /* Initialize mouse events for the additional nodes */\n        if (this.options.interactive) {\n            if (L.Browser.svg || !L.Browser.vml) {\n                textPath.setAttribute('class', 'leaflet-interactive');\n            }\n\n            var events = ['click', 'dblclick', 'mousedown', 'mouseover',\n                          'mouseout', 'mousemove', 'contextmenu'];\n            for (var i = 0; i < events.length; i++) {\n                L.DomEvent.on(textNode, events[i], this.fire, this);\n            }\n        }\n\n        return this;\n    }\n};\n\nL.Polyline.include(PolylineTextPath);\n\nL.LayerGroup.include({\n    setText: function(text, options) {\n        for (var layer in this._layers) {\n            if (typeof this._layers[layer].setText === 'function') {\n                this._layers[layer].setText(text, options);\n            }\n        }\n        return this;\n    }\n});\n\n\n\n})();\n"],
  "mappings": "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",
  "names": []
}
